<%- include('../partials/userPartials/header')%>

<!DOCTYPE html>
<html>
  <head>
    <title>OTP Enter Page</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        text-align: center;
        background: url("assets/images/backgrounds/login-bg.jpg");
      }

      .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
      }

      .otp-input {
        display: flex;
        justify-content: center;
        margin-bottom: 35px;
      }

      .otp-input input {
        width: 40px;
        height: 40px;
        text-align: center;
        font-size: 18px;
        margin: 0 5px;
        border-radius: 08px;
        border-color: rgba(74, 73, 73, 0.849);
      }

      .box {
        background-color: white;
        padding: 90px;
        text-align: center;
        border: 2px solid;
        border-color: white;
        border-radius: 10px;
      }

      .box h2 {
        font-family: Arial, Helvetica, sans-serif;
        color: rgba(167, 145, 145, 0.904);
      }

      .submit-button {
        padding: 10px 20px;
        background-color: #8f907fc1;
        color: #fff;
        border: none;
        cursor: pointer;
        font-size: 16px;
        border-radius: 5px;
      }

      .resend-link {
        margin-top: 20px;
      }

      .resend-link a {
        color: #575755e4;
        text-decoration: none;
      }

      @media (max-width: 600px) {
        .otp-input input {
          width: 30px;
          height: 30px;
          font-size: 14px;
        }

        .submit-button {
          font-size: 14px;
        }
      }
    </style>
  </head>

  <body>
    <div class="container">
      <div class="box">
        <h2>Enter OTP</h2>
        <form action="/otpEnter" method="post" id="otpEnter">
          <div class="otp-input">
            <input
              type="text"
              maxlength="1"
              name="first"
              oninput="handleInput(this, 'second', '');"
              onkeydown="handleBackspace(this, '');"
            />
            <input
              type="text"
              maxlength="1"
              name="second"
              oninput="handleInput(this, 'third', 'first')"
              onkeydown="handleBackspace(this, 'first')"
            />
            <input
              type="text"
              maxlength="1"
              name="third"
              oninput="handleInput(this, 'fourth', 'second')"
              onkeydown="handleBackspace(this, 'second')"
            />
            <input
              type="text"
              maxlength="1"
              name="fourth"
              oninput="handleInput(this, 'submit', 'third')"
              onkeydown="handleBackspace(this, 'third')"
            />

            <p id="otpError" class="text-danger error-msg"></p>
          </div>

          <button type="submit" class="submit-button">Submit</button>
        </form>
        <% if (typeof error !=='undefined' && error){%>
        <p class="text-danger error-message"><%= error %></p>
        <%} %>
        
        <div id="countdownContainer" class="text-center">
          <span id="countdown"></span>
       </div> 
           
        <div class="resend-link text-center" id="resendContainer" style="display: none;">
          <a href="/otp">Resend OTP</a>
        </div>


      </div>
    </div>

    <script>
      function handleInput(input, nextInputName, prevInputName) {
        if (input.value.length >= input.getAttribute("maxlength")) {
          var nextInput = document.getElementsByName(nextInputName)[0];
          if (nextInput) {
            nextInput.focus();
          } else if (nextInputName === "submit") {
          }
        }
      }

      function handleBackspace(input, prevInputName) {
        if (
          event.key === "Backspace" &&
          input.value.length === 0 &&
          input.previousElementSibling
        ) {
          var prevInput = document.getElementsByName(prevInputName)[0];
          if (prevInput) {
            prevInput.focus();
          }
        }
      }
    </script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
      let countdown = 30;
      let countdownInterval;

      function startCountdown() {
          countdownInterval = setInterval(updateCountdown, 1000);
      }

      function updateCountdown() {
          const countdownContainer = document.getElementById('countdownContainer');
          const resendContainer = document.getElementById('resendContainer');
          const countdownElement = document.getElementById('countdown');

          countdown--;

          if (countdown >= 0) {
              countdownElement.textContent = countdown;
          } else {
              clearInterval(countdownInterval);
              countdownContainer.style.display = 'none';
              resendContainer.style.display = 'block';
          }
      }

      document.getElementById('otpEnter').addEventListener('reset', function (event) {
          event.preventDefault();
          handleOtp(event);
      });

      startCountdown();
  });
</script>


  </body>
</html>
